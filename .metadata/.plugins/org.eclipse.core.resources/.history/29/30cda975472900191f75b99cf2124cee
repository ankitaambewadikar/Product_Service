package com.cg.eShoppingZone.productservice.resource;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;
import org.springframework.boot.test.web.client.TestRestTemplate;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.test.context.junit4.SpringRunner;

@RunWith(SpringRunner.class)
@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)
public class ProductResourceTest {

	@Autowired
	private TestRestTemplate testRestTemplate;

	@Test
	public void testforGetProductByIdForAvavilableProductId() {
		ResponseEntity<ProductResource> responseEntity = testRestTemplate.getForEntity("/products/101", ProductResource.class);
		assertEquals(HttpStatus.OK, responseEntity.getStatusCode());
		//assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.OK);

	}

	@Test
	public void testforGetProductByIdForNotAvavilableProductId() {
		ResponseEntity<ProductResource> responseEntity = testRestTemplate.getForEntity("/products/100", ProductResource.class);
		assertEquals(HttpStatus.BAD_REQUEST, responseEntity.getStatusCode());
		//assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND);

	}
}
